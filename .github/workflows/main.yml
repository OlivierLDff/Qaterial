name: ðŸ‘· Continuous Deployment

on:
  push:
    branches:
      - master
      - ci

  pull_request:
    branches:
      - master

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        version: ['5.15.2']
    steps:
      -
        uses: actions/checkout@v2
      -
        name: ðŸ“¦ Cache Qt
        id: cache-qt
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.version }}
          key: ${{ runner.os }}-QtCache-${{ matrix.version }}-modules
      -
        name: â¬‡ Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.version }}
          dir: ${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.version }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          modules: ''
      -
        name: ðŸ”§ CMake
        run: |
          cmake -E make_directory build
          cmake                           \
            -DQATERIAL_ENABLE_TESTS=ON    \
            -DCMAKE_BUILD_TYPE="Release"  \
            -B build                      \
            -S .
        shell: bash
      -
        name: ðŸ”¨ Qaterial
        run: cmake --build build --target "Qaterial" --config "Release" -j
      -
        name: ðŸ”¨ QaterialTestLoader
        run: cmake --build build --target "QaterialTestLoader" --config "Release" -j
      -
        name: âœ… Unit Tests
        run: cd build && ctest --build-config "Release" --progress --verbose --parallel 12
        if: "!contains(matrix.os, 'ubuntu')"
      -
        name: âœ… Unit Tests
        run: |
          sudo apt install libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-xinerama0 libxcb-keysyms1 libxcb1 libxcb-render-util0 libxcb-randr0
          cd build
          xvfb-run ctest --build-config "Release" --progress --verbose --parallel 12
        if: contains(matrix.os, 'ubuntu')
      -
        name: ðŸš€ Install Qaterial
        run: cmake --install build --prefix install
      -
        name: âœ… Test install work with find_package
        run: |
          cmake -E make_directory tests/FindPackageTest/build
          cmake                                 \
            -DCMAKE_BUILD_TYPE="Release"        \
            -DCMAKE_INSTALL_PREFIX=install      \
            -B tests/FindPackageTest/build      \
            -S tests/FindPackageTest
          cmake                                 \
            --build tests/FindPackageTest/build \
            --target "QaterialFindPackageTest"  \
            --config "Release"                  \
            -j
        shell: bash

  BuildWasm:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - docker-image: 'reivilo1234/qt-webassembly-cmake:qt5.15-em1.39.8'

    steps:
    -
      uses: actions/checkout@v2
    -
      name: ðŸ”§ Configure
      run: mkdir -p build && docker run --rm -v $(pwd):/src/ -u $(id -u):$(id -g) ${{ matrix.docker-image }} cmake -DQATERIAL_ENABLE_PCH=OFF -DQATERIAL_ENABLE_UNITY_BUILD=OFF -B ./build/ -S . ..
    -
      name: ðŸ”¨ Build
      run: docker run --rm -v $(pwd):/src/ -u $(id -u):$(id -g) ${{ matrix.docker-image }} make -C build -j
