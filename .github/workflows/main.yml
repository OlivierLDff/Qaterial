name: ðŸ‘· Continuous Deployment

on:
  push:
    branches:
      - master
      - ci

  pull_request:
    branches:
      - master

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        version: ['6.6.2']
        include:
          - os: ubuntu-latest
            enable_icons: 'ON'
          # - os: ubuntu-latest
          #   enable_icons: 'OFF'
          - os: macOS-latest
            enable_icons: 'ON'
          - os: windows-latest
            enable_icons: 'ON'

    steps:
      -
        uses: actions/checkout@v4
      -
        name: â¬‡ Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.version }}
          dir: ${{ github.workspace }}/Qt-${{ runner.os }}-${{ matrix.version }}
          cache: true
          modules: 'qt5compat'
      -
        name: Enable ninja on ubuntu
        # set CMAKE_GENERATOR to Ninja on ubuntu
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            echo "CMAKE_GENERATOR=Ninja" >> $GITHUB_ENV
          fi
      -
        name: ðŸ”§ CMake
        run: |
          cmake --version
          cmake -E make_directory build
          cmake                           \
            -DQATERIAL_ENABLE_TESTS=ON    \
            -DQATERIAL_ENABLE_ICONS=${{ matrix.enable_icons }} \
            -DCMAKE_BUILD_TYPE="Release"  \
            -DCPM_SOURCE_CACHE=.cpm       \
            -B build                      \
            -S .
        shell: bash
      -
        name: ðŸ”¨ Qaterial
        run: cmake --build build --target "Qaterial" --config "Release" -j
      -
        name: ðŸ”¨ QaterialTestLoader
        run: cmake --build build --target "QaterialTestLoader" --config "Release" -j
      -
        name: âœ… Unit Tests
        run: cd build && ctest --build-config "Release" --progress --verbose --parallel 12
        if: "!contains(matrix.os, 'ubuntu')"
      -
        name: âœ… Unit Tests
        run: |
          sudo apt install libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-xinerama0 libxcb-keysyms1 libxcb1 libxcb-render-util0 libxcb-randr0
          cd build
          xvfb-run ctest --build-config "Release" --progress --verbose --parallel 12
        if: contains(matrix.os, 'ubuntu')
      -
        name: ðŸš€ Install Qaterial
        run: cmake --install build --prefix install
      -
        name: âœ… Test install work with find_package
        run: |
          cmake -E make_directory tests/FindPackageTest/build
          cmake                                 \
            -DCMAKE_BUILD_TYPE="Release"        \
            -DCMAKE_INSTALL_PREFIX=install      \
            -B tests/FindPackageTest/build      \
            -S tests/FindPackageTest
          cmake                                 \
            --build tests/FindPackageTest/build \
            --target "QaterialFindPackageTest"  \
            --config "Release"                  \
            -j
        shell: bash
